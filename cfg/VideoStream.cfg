#!/usr/bin/env python

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

class LEVEL:
    NORMAL = 0
    RUNNING = 1

#       name    type     level     description     default      min      max
gen.add("camera_name", str_t, LEVEL.NORMAL, "Camera name", "camera")
gen.add("set_camera_fps", double_t, LEVEL.RUNNING, "Cam Publish Rate", 30.0, 0.0, 30.0)
gen.add("buffer_queue_size", int_t, LEVEL.NORMAL, "Buffer size for capturing frames", 100, 1, 1000)
gen.add("use_mjpg", bool_t, LEVEL.RUNNING, "Use MJPG capture fourcc instead of default", False)
gen.add("fps", double_t, LEVEL.RUNNING, "Image Publish Rate", 30.0, 0.0, 30.0)
gen.add("frame_id", str_t, LEVEL.RUNNING, "Camera FrameID", "camera")
gen.add("camera_info_url", str_t, LEVEL.RUNNING, "Camera info URL", "")
gen.add("flip_horizontal", bool_t, LEVEL.NORMAL, "Flip image horizontally", False)
gen.add("flip_vertical", bool_t, LEVEL.NORMAL, "Flip image vertically", False)
gen.add("width", int_t, LEVEL.RUNNING, "Target width", 640, 320, 1280)
gen.add("height", int_t, LEVEL.RUNNING, "Target height", 480, 240, 960)
gen.add("reopen_on_read_failure", bool_t, LEVEL.RUNNING, "Re-open camera device on read failure", True)
gen.add("output_encoding", str_t, LEVEL.NORMAL, "Output encoding", 'bgr8')
# SEE_CAM adds
gen.add("brightness", int_t, LEVEL.RUNNING, "Target brightness", 128, 0, 255)
gen.add("contrast", int_t, LEVEL.RUNNING, "Target contrast", 32, 0, 255)
gen.add("saturation", int_t, LEVEL.RUNNING, "Target saturation", 32, 0, 255)
gen.add("sharpness", int_t, LEVEL.RUNNING, "Target sharpness", 24, 0, 255)
gen.add("gain", int_t, LEVEL.RUNNING, "Target gain", 0, 0, 255)
gen.add("white_balance_temperature_auto", bool_t, LEVEL.RUNNING, "Target auto white balance temperature", True)
gen.add("white_balance_temperature", int_t, LEVEL.RUNNING, "Target white balance temperature", 4000, 0, 10000) # step 10
gen.add("exposure_auto", int_t, LEVEL.RUNNING, "Target auto exposure", 3, 0, 3) # 0 manual, 3 aperture priority mode
gen.add("exposure_absolute", int_t, LEVEL.RUNNING, "Target absolute exposure time", 166, 1, 10000)
# gen.add("exposure_auto_priority", bool_t, LEVEL.RUNNING, "", False)
gen.add("backlight_compensation", int_t, LEVEL.RUNNING, "", 1, 0, 1)
# gen.add("power_line_frequency", int_t, LEVEL.RUNNING, "0: Disabled, 1: 50 Hz, 2: 60 Hz, 3: Auto", 1, 0, 3)

exit(gen.generate(pkgname='nicol_rh8d', nodename='video_stream', name="VideoStream"))
