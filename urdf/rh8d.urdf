<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/nic/catkin_ws/src/nicol_ros/nicol_description/urdf/NICOL_robot_generic.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- 
*********************************************************************
* Software License Agreement (MIT License)
*
* Copyright (c) 2020-2024 Nicolas Frick
* All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy of this software 
* and associated documentation files (the "Software"), to deal in the Software without restriction, 
* including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
* and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, 
* subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
* INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
* PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE 
* FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, 
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
********************************************************************* 
-->
<!-- This file is used to create parts of the NICOL robot in an own namespace. -->
<!-- Every defined NICOL macro can be instanciated by the xacro "macro:call" functionality. -->
<!-- For the NICOL simulation, the robot base, the head and the robot frame can reside in an -->
<!-- own robot description as well as the right and the left limb can have an own robot description. -->
<!-- This file is also used to create a single NICOL robot model urdf file, -->
<!-- having all joints in the same namespace. Primarily used to create -->
<!-- a urdf for applications that require a whole in one robot description. -->
<!-- Depending on the arguments set, all NICOL children can be created by  -->
<!-- calling this file several times from a launchfile.  -->
<!-- (eg. <param name="robot_description" command="xacro 'filename' with_head:=true other_args:=..." />). -->
<!-- The respective macro args have the caret (^) to substitute args by properties defined in outer scope.-->
<!-- All properties below do configure the macros called. So, no explicit parametrization of the macro is required.  -->
<!-- The configuration files for the macros contain all relevant parameter to create the NICOL robot. -->
<!-- In order to place a base joint in the right pose, the relevant base joint parameters are accessed (${ $(arg name) }) by the -->
<!-- launchfile arguments passed to this script. See "common_omp_config.xacro", "common_rh8d_config.xacro" -->
<!-- and "common_robot_base_config.xacro" for those parameters. -->
<!-- The following args are set dynamically and define the robot description. -->
<!-- Required args: -->
<!--     use_robot_name:        Global name for the robot description param. -->
<!--     robot_macro:           The macro to call. All NICOL parts are instanciated by macros.  -->
<!--                            Possible macros are: [robot_base_macro, omp_unit_macro, rh8d_unit_macro]. -->
<!--                            Also used to conditionally define xacro properties for specific robot macros -->
<!--                            at a global level. Eg. if "robot_macro" equals 'robot_base_macro' all properties -->
<!--                            used by the robot_base_macro and its children are defined. -->
<!--     use_high_res_mesh:     Use optional meshes with higher resolution. May lower the performance. -->
<!--     visualize_sensor:      Whether to visualize the laser and camera rays for debugging.-->
<!--     use_mesh_collision: Forces the same meshes to take for collision as for visual geometry for all links. -->
<!--                            Sometimes the simplified collision geometry is not desired and we want the same detailed -->
<!--                            geometry for collision as for visual link elements. -->
<!--    use_simple_geometry_visual: Forces the same meshes to take for collision as for visual geometry for all links. -->
<!--                            Sometimes the simplified collision geometry is not desired and we want the same detailed -->
<!--                            geometry for collision as for visual link elements. -->
<!--     robot_namespace:       The fully qualified name identifier of the robot description. Used to initiate the Gazebo hardware sim plugin. -->
<!--                            Eg. "namespace"/"use_robot_name". -->
<!--     base_joint_idx:        Accesses config file by ${}. The name of the base joint, used to append the respective (macro) link to. -->
<!--                            A valid base joint identifier from the respective macro configuration file. -->
<!--     base_joint_xyz:        Accesses config file by ${}. The position of the base joint, used to append the respective (macro) link to. -->
<!--                            A valid base joint position from the respective macro configuration file. -->
<!--     base_joint_rpy:        Accesses config file by ${}. The orientation of the base joint, used to append the respective (macro) link to. -->
<!--                            A valid base joint orientation from the respective macro configuration file. -->
<!--     base_joint_child:      Accesses config file by ${}. The name of the (macro) link to append to the base joint. -->
<!--                            A valid base joint child identifier from the respective macro configuration file. -->
<!--     with_rh8d:             Whether an RH8D should be appended to each omp joint6. -->
<!--                            If false, the kinematic chain ends with <r, l>_link6. Left out, if false. -->
<!--     body_side_prefix:      Only required for the "omp_unit_macro." This argument decides the prefix for the Gazebo references. -->
<!--                            for a right omp and rh8d unit Furthermore, this argument is prependet to each link to achieve a unique link name in the tf-tree. -->
<!--     with_head:             Only required for the "robot_base_macro". -->
<!--                            Whether the head to append. The head is left out, if false. -->
<!--     with_frame:            Only required for the "robot_base_macro". -->
<!--                            Whether the robot frame to append. The frame is left out, if false -->
<!--     with_right_omp:        Only required for the "robot_base_macro" if no different namespaces are used. -->
<!--                            Whether a right Open Manipulator P instance to append. Left out, if false. -->
<!--     with_left_omp:         Only required for the "robot_base_macro" if no different namespaces are used. -->
<!--                            Whether a left Open Manipulator P instance to append. Left out, if false. -->
<!--     r_body_side_prefix:    Only required for the "robot_base_macro" if no different namespaces are used. -->
<!--                            This argument decides the prefix for the Gazebo references for a right omp and rh8d unit. -->
<!--                            Furthermore, this argument is prependet to each link to achieve a unique link name in the tf-tree. -->
<!--     l_body_side_prefix:    Only required for the "robot_base_macro" if no different namespaces are used. -->
<!--                            This argument decides the prefix for the Gazebo references for a left omp and rh8d unit. -->
<!--                            Furthermore, this argument is prependet to each link to achieve a unique link name in the tf-tree. -->
<!--     r_joint_export_prefix: Only required for the "robot_base_macro" if no different namespaces are used. -->
<!--                            Prepended to the omp and rh8d joints to distinguish joints  -->
<!--                            from the left counterparts (to achieve a unique joint naming). -->
<!--     l_joint_export_prefix: Only required for the "robot_base_macro" if no different namespaces are used. -->
<!--                            Prepended to the omp and rh8d joints to distinguish joints -->
<!--                            from the right counterparts (to achieve a unique joint naming). -->
<!--    realsense_camera_name:  Only required for the "robot_base_macro". The name for the Realsense top camera link name -->
<!--                            appearing in the tf-tree and used as camera topic namespace. -->
<!--    enable_pointcloud:      Only required for the "robot_base_macro". Whether to activate Realsense pointcloud topic. -->
<!--    width:                  Only required for the "robot_base_macro". Eye cam image width. -->
<!--    height:                 Only required for the "robot_base_macro". Eye cam image height. -->
<!--    left_camera_name:       Only required for the "robot_base_macro". The name for the left eye camera link name  -->
<!--                            appearing in the tf-tree and used as camera topic namespace. -->
<!--    right_camera_name:      Only required for the "robot_base_macro". The name for the right eye camera link name -->
<!--                            appearing in the tf-tree and used as camera topic namespace. -->
<!--    fps:                    Only required for the "robot_base_macro". The publish rate of the eye image messages. -->
<!--    use_effort_controllers: Uses the effort_controllers/joint_position_controller ros plugin (receives joint position command,
                                sends joint effort) for PID motor control. If false, the position_controllers/joint_position_controller 
                                plugin is used (internally forwards the joint position command).-->
<!--    preserve_fixed_joint: Preserve fixed joint of last link in kin. chain (disable joint lumping) by adding a revol. joint with zero limits. -->
<!--                                               Re-implements the <disableFixedJointLumping> tag of sdf. -->
<robot name="rh8d">
  <!-- ++++++++++++++++++++++++++ robot +++++++++++++++++++++++++++++ -->
  <!-- World, center of global coordinate system-->
  <link name="world">
      <inertial>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="0.0"/>
        <inertia ixx="0" ixy="0.0" ixz="0.0" iyy="0" iyz="0.0" izz="0"/>
    </inertial>
  </link>
  <joint name="joint_base" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.007"/> <!-- cam holder shifts 7mm along z -->
    <parent link="world"/>
    <child link="r_forearm"/>
  </joint>
  <!-- NICOL link  -->
  <link name="r_forearm">
    
    <!-- adapter -->
    
    <!-- corpus -->
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.07907642"/>
      <mass value="0.400"/>
      <inertia ixx="9.537400000e-04" ixy="0.0" ixz="0.0" iyy="9.537400000e-04" iyz="0.0" izz="2.400000000e-04"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="joint7" type="revolute">
    <origin rpy="1.5707963267948966 0 0" xyz="0 0 0.184"/>
    <parent link="r_forearm"/>
    <child link="r_palm_axis"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="-0.7853981633974483" upper="0.7853981633974483" velocity="2"/>
    <dynamics damping="5" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_palm_axis">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.100"/>
      <inertia ixx="1.022000000e-05" ixy="0.0" ixz="0.0" iyy="2.764000000e-05" iyz="0.0" izz="2.764000000e-05"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="joint8" type="revolute">
    <origin rpy="0 1.5707963267948966 0" xyz="0 0 0"/>
    <parent link="r_palm_axis"/>
    <child link="r_palm"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="-0.7853981633974483" upper="0.7853981633974483" velocity="2"/>
    <dynamics damping="5" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_palm">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 0.030 0"/>
      <mass value="0.300"/>
      <inertia ixx="3.109600000e-04" ixy="0.0" ixz="0.0" iyy="2.319100000e-04" iyz="0.0" izz="1.009500000e-04"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <joint name="joint_r_palm_to_r_tool0" type="fixed">
    <origin rpy="0.06 -0.04 -2.92922802" xyz="-0.0011171786 0.0818708881 -0.0130285291"/>
    <parent link="r_palm"/>
    <child link="r_tool0"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- disable lumping: fixed joint is replaced by revolute joint with zero limits -->
  <!-- tool0 link -->
  <link name="r_tool0">
      <inertial>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="0.0"/>
        <inertia ixx="0" ixy="0.0" ixz="0.0" iyy="0" iyz="0.0" izz="0"/>
    </inertial>
  </link>
  <joint name="joint_r_laser" type="fixed">
    <origin rpy="0 0 3.141592653589793" xyz="-0.00030337 0.04498324 0"/>
    <parent link="r_palm"/>
    <child link="r_laser"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- disable lumping: fixed joint is replaced by revolute joint with zero limits -->
  <!-- laser link -->
  <link name="r_laser">
      <inertial>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="0.0"/>
        <inertia ixx="0" ixy="0.0" ixz="0.0" iyy="0" iyz="0.0" izz="0"/>
    </inertial>
  </link>
  <!-- NICOL revolute joint -->
  <joint name="jointT0" type="revolute">
    <origin rpy="-2.54680616 -0.60124514  0.33418237" xyz="-0.0083412575 0.0157859987 0.0379541955"/>
    <parent link="r_palm"/>
    <child link="r_thumb_base"/>
    <axis xyz="0 0 -1"/>
    <limit effort="20" lower="-0.7853981633974483" upper="0.7853981633974483" velocity="2"/>
    <dynamics damping="0.3" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_thumb_base">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.01537512"/>
      <mass value="0.020"/>
      <inertia ixx="2.060000000e-06" ixy="0.0" ixz="0.0" iyy="2.060000000e-06" iyz="0.0" izz="9.600000000e-07"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="jointT1" type="revolute">
    <origin rpy="1.57079633 -1.01753528 -1.57079633" xyz="0 -0.0111644427 0.005490292"/>
    <parent link="r_thumb_base"/>
    <child link="r_Tproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Tproximal">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.011 0"/>
      <mass value="0.03767300"/>
      <inertia ixx="2.030000000e-06" ixy="0.0" ixz="0.0" iyy="1.030000000e-06" iyz="0.0" izz="2.030000000e-06"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="jointT2" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0215859928 0"/>
    <parent link="r_Tproximal"/>
    <child link="r_Tmiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Tmiddle">
    
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.011 0"/>
      <mass value="0.03767300"/>
      <inertia ixx="2.030000000e-06" ixy="0.0" ixz="0.0" iyy="1.030000000e-06" iyz="0.0" izz="2.030000000e-06"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="jointT3" type="revolute">
    <origin rpy="0 0 0.078" xyz="0 -0.0215859928 0"/>
    <parent link="r_Tmiddle"/>
    <child link="r_Ttip"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.001" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Ttip">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.010 0"/>
      <mass value="0.01349695"/>
      <inertia ixx="6.400000000e-07" ixy="0.0" ixz="0.0" iyy="3.800000000e-07" iyz="0.0" izz="6.400000000e-07"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <joint name="joint_Tbumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="r_Ttip"/>
    <child link="r_Tbumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- disable lumping: fixed joint is replaced by revolute joint with zero limits -->
  <!-- NICOL link  -->
  <link name="r_Tbumper">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0.0005 0 0"/>
      <mass value="0.0015"/>
      <inertia ixx="2.000000000e-08" ixy="0.0" ixz="0.0" iyy="1.000000000e-08" iyz="0.0" izz="1.000000000e-08"/>
    </inertial>
  </link>
  <!-- if sensor used, append respective sensor -->
  <!-- NICOL revolute joint -->
  <joint name="jointI1" type="revolute">
    <origin rpy="-0.08267713  0.17715231 -2.93857995" xyz="-0.0043044918 0.0812907302 0.0367863551"/>
    <parent link="r_palm"/>
    <child link="r_Iproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.02" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Iproximal">
    
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.0125 0"/>
      <mass value="0.04596550"/>
      <inertia ixx="3.030000000e-06" ixy="0.0" ixz="0.0" iyy="1.270000000e-06" iyz="0.0" izz="3.030000000e-06"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="jointI2" type="revolute">
    <origin rpy="0 0 -0.015" xyz="0 -0.0258749732 0"/>
    <parent link="r_Iproximal"/>
    <child link="r_Imiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Imiddle">
    
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.0125 0"/>
      <mass value="0.02596550"/>
      <inertia ixx="1.710000000e-06" ixy="0.0" ixz="0.0" iyy="7.100000000e-07" iyz="0.0" izz="1.710000000e-06"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="jointI3" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0258749732 0"/>
    <parent link="r_Imiddle"/>
    <child link="r_Itip"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.001" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Itip">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.010 0"/>
      <mass value="0.01349695"/>
      <inertia ixx="6.400000000e-07" ixy="0.0" ixz="0.0" iyy="3.800000000e-07" iyz="0.0" izz="6.400000000e-07"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <joint name="joint_Ibumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="r_Itip"/>
    <child link="r_Ibumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- disable lumping: fixed joint is replaced by revolute joint with zero limits -->
  <!-- NICOL link  -->
  <link name="r_Ibumper">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0.0005 0 0"/>
      <mass value="0.0015"/>
      <inertia ixx="2.000000000e-08" ixy="0.0" ixz="0.0" iyy="1.000000000e-08" iyz="0.0" izz="1.000000000e-08"/>
    </inertial>
  </link>
  <!-- if sensor used, append respective sensor -->
  <!-- NICOL revolute joint -->
  <joint name="jointM1" type="revolute">
    <origin rpy="-0.02 0.06 -2.92246721" xyz="-0.0012008743 0.0828960623 0.0118294206"/>
    <parent link="r_palm"/>
    <child link="r_Mproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.02" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Mproximal">
    
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.0125 0"/>
      <mass value="0.04596550"/>
      <inertia ixx="3.030000000e-06" ixy="0.0" ixz="0.0" iyy="1.270000000e-06" iyz="0.0" izz="3.030000000e-06"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="jointM2" type="revolute">
    <origin rpy="0 0 -0.015" xyz="0 -0.0258749732 0"/>
    <parent link="r_Mproximal"/>
    <child link="r_Mmiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Mmiddle">
    
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.0125 0"/>
      <mass value="0.02596550"/>
      <inertia ixx="1.710000000e-06" ixy="0.0" ixz="0.0" iyy="7.100000000e-07" iyz="0.0" izz="1.710000000e-06"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="jointM3" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0258749732 0"/>
    <parent link="r_Mmiddle"/>
    <child link="r_Mtip"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.001" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Mtip">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.010 0"/>
      <mass value="0.01349695"/>
      <inertia ixx="6.400000000e-07" ixy="0.0" ixz="0.0" iyy="3.800000000e-07" iyz="0.0" izz="6.400000000e-07"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <joint name="joint_Mbumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="r_Mtip"/>
    <child link="r_Mbumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- disable lumping: fixed joint is replaced by revolute joint with zero limits -->
  <!-- NICOL link  -->
  <link name="r_Mbumper">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0.0005 0 0"/>
      <mass value="0.0015"/>
      <inertia ixx="2.000000000e-08" ixy="0.0" ixz="0.0" iyy="1.000000000e-08" iyz="0.0" izz="1.000000000e-08"/>
    </inertial>
  </link>
  <!-- if sensor used, append respective sensor -->
  <!-- NICOL revolute joint -->
  <joint name="jointR1" type="revolute">
    <origin rpy="0.06 -0.04 -2.92922802" xyz="-0.0011171786 0.0818708881 -0.0130285291"/>
    <parent link="r_palm"/>
    <child link="r_Rproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.02" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Rproximal">
    
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.0125 0"/>
      <mass value="0.04596550"/>
      <inertia ixx="3.030000000e-06" ixy="0.0" ixz="0.0" iyy="1.270000000e-06" iyz="0.0" izz="3.030000000e-06"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="jointR2" type="revolute">
    <origin rpy="0 0 -0.015" xyz="0 -0.0258749732 0"/>
    <parent link="r_Rproximal"/>
    <child link="r_Rmiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Rmiddle">
    
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.0125 0"/>
      <mass value="0.02596550"/>
      <inertia ixx="1.710000000e-06" ixy="0.0" ixz="0.0" iyy="7.100000000e-07" iyz="0.0" izz="1.710000000e-06"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="jointR3" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0258749732 0"/>
    <parent link="r_Rmiddle"/>
    <child link="r_Rtip"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.001" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Rtip">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.010 0"/>
      <mass value="0.01349695"/>
      <inertia ixx="6.400000000e-07" ixy="0.0" ixz="0.0" iyy="3.800000000e-07" iyz="0.0" izz="6.400000000e-07"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <joint name="joint_Rbumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="r_Rtip"/>
    <child link="r_Rbumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- disable lumping: fixed joint is replaced by revolute joint with zero limits -->
  <!-- NICOL link  -->
  <link name="r_Rbumper">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0.0005 0 0"/>
      <mass value="0.0015"/>
      <inertia ixx="2.000000000e-08" ixy="0.0" ixz="0.0" iyy="1.000000000e-08" iyz="0.0" izz="1.000000000e-08"/>
    </inertial>
  </link>
  <!-- if sensor used, append respective sensor -->
  <!-- NICOL revolute joint -->
  <joint name="jointL1" type="revolute">
    <origin rpy="0.14 -0.17  -2.95156384" xyz="-0.0031705239 0.0731417977 -0.0376310382"/>
    <parent link="r_palm"/>
    <child link="r_Lproximal"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.02" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Lproximal">
    
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.0125 0"/>
      <mass value="0.04596550"/>
      <inertia ixx="3.030000000e-06" ixy="0.0" ixz="0.0" iyy="1.270000000e-06" iyz="0.0" izz="3.030000000e-06"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="jointL2" type="revolute">
    <origin rpy="0 0 -0.015" xyz="0 -0.0258749732 0"/>
    <parent link="r_Lproximal"/>
    <child link="r_Lmiddle"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Lmiddle">
    
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.0125 0"/>
      <mass value="0.02596550"/>
      <inertia ixx="1.710000000e-06" ixy="0.0" ixz="0.0" iyy="7.100000000e-07" iyz="0.0" izz="1.710000000e-06"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <!-- NICOL revolute joint -->
  <joint name="jointL3" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.0258749732 0"/>
    <parent link="r_Lmiddle"/>
    <child link="r_Ltip"/>
    <axis xyz="0 0 1"/>
    <limit effort="20" lower="0.0" upper="1.57" velocity="2"/>
    <dynamics damping="0.001" friction="0.0"/>
  </joint>
  <!-- NICOL revolute joint -->
  <!-- NICOL link  -->
  <link name="r_Ltip">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0 -0.010 0"/>
      <mass value="0.01349695"/>
      <inertia ixx="6.400000000e-07" ixy="0.0" ixz="0.0" iyy="3.800000000e-07" iyz="0.0" izz="6.400000000e-07"/>
    </inertial>
  </link>
  <!-- NICOL link  -->
  <joint name="joint_Lbumper" type="fixed">
    <origin rpy="0 0 -0.35" xyz="0.00674 -0.01638 0"/>
    <parent link="r_Ltip"/>
    <child link="r_Lbumper"/>
  </joint>
  <!-- NICOL fixed joint -->
  <!-- disable lumping: fixed joint is replaced by revolute joint with zero limits -->
  <!-- NICOL link  -->
  <link name="r_Lbumper">
    
    
    <inertial>
      <origin rpy="0 0 0" xyz="0.0005 0 0"/>
      <mass value="0.0015"/>
      <inertia ixx="2.000000000e-08" ixy="0.0" ixz="0.0" iyy="1.000000000e-08" iyz="0.0" izz="1.000000000e-08"/>
    </inertial>
  </link>
</robot>

